var mboxCopyright = "Copyright 1996-2012. Adobe Systems Incorporated. All rights reserved."; mboxUrlBuilder = function(a, b) { this.a = a; this.b = b; this.c = new Array(); this.d = function(e) { return e; }; this.f = null;};mboxUrlBuilder.prototype.addParameter = function(g, h) { var i = new RegExp('(\'|")'); if (i.exec(g)) { throw "Parameter '" + g + "' contains invalid characters"; } for (var j = 0; j < this.c.length; j++) { var k = this.c[j]; if (k.name == g) { k.value = h; return this; } } var l = new Object(); l.name = g; l.value = h; this.c[this.c.length] = l; return this;};mboxUrlBuilder.prototype.addParameters = function(c) { if (!c) { return this; } for (var j = 0; j < c.length; j++) { var m = c[j].indexOf('='); if (m == -1 || m == 0) { continue; } this.addParameter(c[j].substring(0, m), c[j].substring(m + 1, c[j].length)); } return this;};mboxUrlBuilder.prototype.setServerType = function(n) { this.o = n;};mboxUrlBuilder.prototype.setBasePath = function(f) { this.f = f;};mboxUrlBuilder.prototype.setUrlProcessAction = function(p) { this.d = p;};mboxUrlBuilder.prototype.buildUrl = function() { var q = this.f ? this.f : '/m2/' + this.b + '/mbox/' + this.o; var r = document.location.protocol == 'file:' ? 'http:' : document.location.protocol; var e = r + "//" + this.a + q; var s = e.indexOf('?') != -1 ? '&' : '?'; for (var j = 0; j < this.c.length; j++) { var k = this.c[j]; e += s + encodeURIComponent(k.name) + '=' + encodeURIComponent(k.value); s = '&'; } return this.t(this.d(e));};mboxUrlBuilder.prototype.getParameters = function() { return this.c;};mboxUrlBuilder.prototype.setParameters = function(c) { this.c = c;};mboxUrlBuilder.prototype.clone = function() { var u = new mboxUrlBuilder(this.a, this.b); u.setServerType(this.o); u.setBasePath(this.f); u.setUrlProcessAction(this.d); for (var j = 0; j < this.c.length; j++) { u.addParameter(this.c[j].name, this.c[j].value); } return u;};mboxUrlBuilder.prototype.t = function(v) { return v.replace(/\"/g, '&quot;').replace(/>/g, '&gt;');};mboxStandardFetcher = function() { };mboxStandardFetcher.prototype.getType = function() { return 'standard';};mboxStandardFetcher.prototype.fetch = function(w) { w.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + w.buildUrl() + '" language="JavaScript"><' + '\/scr' + 'ipt>');};mboxStandardFetcher.prototype.cancel = function() { };mboxAjaxFetcher = function() { };mboxAjaxFetcher.prototype.getType = function() { return 'ajax';};mboxAjaxFetcher.prototype.fetch = function(w) { w.setServerType(this.getType()); var e = w.buildUrl(); this.x = document.createElement('script'); this.x.src = e; document.body.appendChild(this.x);};mboxAjaxFetcher.prototype.cancel = function() { };mboxMap = function() { this.y = new Object(); this.z = new Array();};mboxMap.prototype.put = function(A, h) { if (!this.y[A]) { this.z[this.z.length] = A; } this.y[A] = h;};mboxMap.prototype.get = function(A) { return this.y[A];};mboxMap.prototype.remove = function(A) { this.y[A] = undefined;};mboxMap.prototype.each = function(p) { for (var j = 0; j < this.z.length; j++ ) { var A = this.z[j]; var h = this.y[A]; if (h) { var B = p(A, h); if (B === false) { break; } } }};mboxFactory = function(C, b, D) { this.E = false; this.C = C; this.D = D; this.F = new mboxList(); mboxFactories.put(D, this); this.G = typeof document.createElement('div').replaceChild != 'undefined' && (function() { return true; })() && typeof document.getElementById != 'undefined' && typeof (window.attachEvent || document.addEventListener || window.addEventListener) != 'undefined' && typeof encodeURIComponent != 'undefined'; this.H = this.G && mboxGetPageParameter('mboxDisable') == null; var I = D == 'default'; this.J = new mboxCookieManager( 'mbox' + (I ? '' : ('-' + D)), (function() { return mboxCookiePageDomain(); })()); this.H = this.H && this.J.isEnabled() && (this.J.getCookie('disable') == null); if (this.isAdmin()) { this.enable(); } this.K(); this.L = mboxGenerateId(); this.M = mboxScreenHeight(); this.N = mboxScreenWidth(); this.O = mboxBrowserWidth(); this.P = mboxBrowserHeight(); this.Q = mboxScreenColorDepth(); this.R = mboxBrowserTimeOffset(); this.S = new mboxSession(this.L, 'mboxSession', 'session', 31 * 60, this.J); this.T = new mboxPC('PC', 1209600, this.J); this.w = new mboxUrlBuilder(C, b); this.U(this.w, I); this.V = new Date().getTime(); this.W = this.V; var X = this; this.addOnLoad(function() { X.W = new Date().getTime(); }); if (this.G) { this.addOnLoad(function() { X.E = true; X.getMboxes().each(function(Y) { Y.setFetcher(new mboxAjaxFetcher()); Y.finalize(); }); }); if (this.H) { this.limitTraffic(100, 2592000); this.Z(); this._ = new mboxSignaler(function(ab, c) { return X.create(ab, c); }, this.J); } }};mboxFactory.prototype.forcePCId = function(bb) { if (this.T.forceId(bb)) { this.S.forceId(mboxGenerateId()); }};mboxFactory.prototype.forceSessionId = function(bb) { this.S.forceId(bb);};mboxFactory.prototype.isEnabled = function() { return this.H;};mboxFactory.prototype.getDisableReason = function() { return this.J.getCookie('disable');};mboxFactory.prototype.isSupported = function() { return this.G;};mboxFactory.prototype.disable = function(cb, db) { if (typeof cb == 'undefined') { cb = 60 * 60; } if (typeof db == 'undefined') { db = 'unspecified'; } if (!this.isAdmin()) { this.H = false; this.J.setCookie('disable', db, cb); }};mboxFactory.prototype.enable = function() { this.H = true; this.J.deleteCookie('disable');};mboxFactory.prototype.isAdmin = function() { return document.location.href.indexOf('mboxEnv') != -1;};mboxFactory.prototype.limitTraffic = function(eb, cb) { if (eb == 100) { return; } var fb = true; if (parseInt(this.J.getCookie('level')) != eb) { fb = (Math.random() * 100) <= eb; } this.J.setCookie('level', eb, cb); if (!fb) { this.disable(60 * 60, 'limited by traffic'); }};mboxFactory.prototype.addOnLoad = function(gb) { if (this.isDomLoaded()) { gb(); } else { var hb = false; var ib = function() { if (hb) { return; } hb = true; gb(); }; this.jb.push(ib); if (this.isDomLoaded() && !hb) { ib(); } }};mboxFactory.prototype.getEllapsedTime = function() { return this.W - this.V;};mboxFactory.prototype.getEllapsedTimeUntil = function(kb) { return kb - this.V;};mboxFactory.prototype.getMboxes = function() { return this.F;};mboxFactory.prototype.get = function(ab, lb) { return this.F.get(ab).getById(lb || 0);};mboxFactory.prototype.update = function(ab, c) { if (!this.isEnabled()) { return; } if (!this.isDomLoaded()) { var X = this; this.addOnLoad(function() { X.update(ab, c); }); return; } if (this.F.get(ab).length() == 0) { throw "Mbox " + ab + " is not defined"; } this.F.get(ab).each(function(Y) { Y.getUrlBuilder() .addParameter('mboxPage', mboxGenerateId()); Y.load(c); });};mboxFactory.prototype.create = function( ab, c, mb) { if (!this.isSupported()) { return null; } var e = this.w.clone(); e.addParameter('mboxCount', this.F.length() + 1); e.addParameters(c); var lb = this.F.get(ab).length(); var nb = this.D + '-' + ab + '-' + lb; var ob; if (mb) { ob = new mboxLocatorNode(mb); } else { if (this.E) { throw 'The page has already been loaded, can\'t write marker'; } ob = new mboxLocatorDefault(nb); } try { var X = this; var pb = 'mboxImported-' + nb; var Y = new mbox(ab, lb, e, ob, pb); if (this.H) { Y.setFetcher( this.E ? new mboxAjaxFetcher() : new mboxStandardFetcher()); } Y.setOnError(function(qb, n) { Y.setMessage(qb); Y.activate(); if (!Y.isActivated()) { X.disable(60 * 60, qb); window.location.reload(false); } }); this.F.add(Y); } catch (rb) { this.disable(); throw 'Failed creating mbox "' + ab + '", the error was: ' + rb; } var sb = new Date(); e.addParameter('mboxTime', sb.getTime() - (sb.getTimezoneOffset() * 60000)); return Y;};mboxFactory.prototype.getCookieManager = function() { return this.J;};mboxFactory.prototype.getPageId = function() { return this.L;};mboxFactory.prototype.getPCId = function() { return this.T;};mboxFactory.prototype.getSessionId = function() { return this.S;};mboxFactory.prototype.getSignaler = function() { return this._;};mboxFactory.prototype.getUrlBuilder = function() { return this.w;};mboxFactory.prototype.U = function(e, I) { e.addParameter('mboxHost', document.location.hostname) .addParameter('mboxSession', this.S.getId()); if (!I) { e.addParameter('mboxFactoryId', this.D); } if (this.T.getId() != null) { e.addParameter('mboxPC', this.T.getId()); } e.addParameter('mboxPage', this.L); e.addParameter('screenHeight', this.M); e.addParameter('screenWidth', this.N); e.addParameter('browserWidth', this.O); e.addParameter('browserHeight', this.P); e.addParameter('browserTimeOffset', this.R); e.addParameter('colorDepth', this.Q); e.setUrlProcessAction(function(e) { e += '&mboxURL=' + encodeURIComponent(document.location); var tb = encodeURIComponent(document.referrer); if (e.length + tb.length < 2000) { e += '&mboxReferrer=' + tb; } e += '&mboxVersion=' + mboxVersion; return e; });};mboxFactory.prototype.ub = function() { return "";};mboxFactory.prototype.Z = function() { document.write('<style>.' + 'mboxDefault' + ' { visibility:hidden; }</style>');};mboxFactory.prototype.isDomLoaded = function() { return this.E;};mboxFactory.prototype.K = function() { if (this.jb != null) { return; } this.jb = new Array(); var X = this; (function() { var vb = document.addEventListener ? "DOMContentLoaded" : "onreadystatechange"; var wb = false; var xb = function() { if (wb) { return; } wb = true; for (var i = 0; i < X.jb.length; ++i) { X.jb[i](); } }; if (document.addEventListener) { document.addEventListener(vb, function() { document.removeEventListener(vb, arguments.callee, false); xb(); }, false); window.addEventListener("load", function(){ document.removeEventListener("load", arguments.callee, false); xb(); }, false); } else if (document.attachEvent) { if (self !== self.top) { document.attachEvent(vb, function() { if (document.readyState === 'complete') { document.detachEvent(vb, arguments.callee); xb(); } }); } else { var yb = function() { try { document.documentElement.doScroll('left'); xb(); } catch (zb) { setTimeout(yb, 13); } }; yb(); } } if (document.readyState === "complete") { xb(); } })();};mboxSignaler = function(Ab, J) { this.J = J; var Bb = J.getCookieNames('signal-'); for (var j = 0; j < Bb.length; j++) { var Cb = Bb[j]; var Db = J.getCookie(Cb).split('&'); var Y = Ab(Db[0], Db); Y.load(); J.deleteCookie(Cb); }};mboxSignaler.prototype.signal = function(Eb, ab ) { this.J.setCookie('signal-' + Eb, mboxShiftArray(arguments).join('&'), 45 * 60);};mboxList = function() { this.F = new Array();};mboxList.prototype.add = function(Y) { if (Y != null) { this.F[this.F.length] = Y; }};mboxList.prototype.get = function(ab) { var B = new mboxList(); for (var j = 0; j < this.F.length; j++) { var Y = this.F[j]; if (Y.getName() == ab) { B.add(Y); } } return B;};mboxList.prototype.getById = function(Fb) { return this.F[Fb];};mboxList.prototype.length = function() { return this.F.length;};mboxList.prototype.each = function(p) { if (typeof p != 'function') { throw 'Action must be a function, was: ' + typeof(p); } for (var j = 0; j < this.F.length; j++) { p(this.F[j]); }};mboxLocatorDefault = function(g) { this.g = 'mboxMarker-' + g; document.write('<div id="' + this.g + '" style="visibility:hidden;display:none">&nbsp;</div>');};mboxLocatorDefault.prototype.locate = function() { var Gb = document.getElementById(this.g); while (Gb != null) { if (Gb.nodeType == 1) { if (Gb.className == 'mboxDefault') { return Gb; } } Gb = Gb.previousSibling; } return null;};mboxLocatorDefault.prototype.force = function() { var Hb = document.createElement('div'); Hb.className = 'mboxDefault'; var Ib = document.getElementById(this.g); Ib.parentNode.insertBefore(Hb, Ib); return Hb;};mboxLocatorNode = function(Jb) { this.Gb = Jb;};mboxLocatorNode.prototype.locate = function() { return typeof this.Gb == 'string' ? document.getElementById(this.Gb) : this.Gb;};mboxLocatorNode.prototype.force = function() { return null;};mboxCreate = function(ab ) { var Y = mboxFactoryDefault.create( ab, mboxShiftArray(arguments)); if (Y) { Y.load(); } return Y;};mboxDefine = function(mb, ab ) { var Y = mboxFactoryDefault.create(ab, mboxShiftArray(mboxShiftArray(arguments)), mb); return Y;};mboxUpdate = function(ab ) { mboxFactoryDefault.update(ab, mboxShiftArray(arguments));};mbox = function(g, Kb, w, Lb, pb) { this.Mb = null; this.Nb = 0; this.ob = Lb; this.pb = pb; this.Ob = null; this.Pb = new mboxOfferContent(); this.Hb = null; this.w = w; this.message = ''; this.Qb = new Object(); this.Rb = 0; this.Kb = Kb; this.g = g; this.Sb(); w.addParameter('mbox', g) .addParameter('mboxId', Kb); this.Tb = function() {}; this.Ub = function() {}; this.Vb = null;};mbox.prototype.getId = function() { return this.Kb;};mbox.prototype.Sb = function() { if (this.g.length > 250) { throw "Mbox Name " + this.g + " exceeds max length of " + "250 characters."; } else if (this.g.match(/^\s+|\s+$/g)) { throw "Mbox Name " + this.g + " has leading/trailing whitespace(s)."; }};mbox.prototype.getName = function() { return this.g;};mbox.prototype.getParameters = function() { var c = this.w.getParameters(); var B = new Array(); for (var j = 0; j < c.length; j++) { if (c[j].name.indexOf('mbox') != 0) { B[B.length] = c[j].name + '=' + c[j].value; } } return B;};mbox.prototype.setOnLoad = function(p) { this.Ub = p; return this;};mbox.prototype.setMessage = function(qb) { this.message = qb; return this;};mbox.prototype.setOnError = function(Tb) { this.Tb = Tb; return this;};mbox.prototype.setFetcher = function(Wb) { if (this.Ob) { this.Ob.cancel(); } this.Ob = Wb; return this;};mbox.prototype.getFetcher = function() { return this.Ob;};mbox.prototype.load = function(c) { if (this.Ob == null) { return this; } this.setEventTime("load.start"); this.cancelTimeout(); this.Nb = 0; var w = (c && c.length > 0) ? this.w.clone().addParameters(c) : this.w; this.Ob.fetch(w); var X = this; this.Xb = setTimeout(function() { X.Tb('browser timeout', X.Ob.getType()); }, 10000); this.setEventTime("load.end"); return this;};mbox.prototype.loaded = function() { this.cancelTimeout(); if (!this.activate()) { var X = this; setTimeout(function() { X.loaded(); }, 100); }};mbox.prototype.activate = function() { if (this.Nb) { return this.Nb; } this.setEventTime('activate' + ++this.Rb + '.start'); if (this.show()) { this.cancelTimeout(); this.Nb = 1; } this.setEventTime('activate' + this.Rb + '.end'); return this.Nb;};mbox.prototype.isActivated = function() { return this.Nb;};mbox.prototype.setOffer = function(Pb) { if (Pb && Pb.show && Pb.setOnLoad) { this.Pb = Pb; } else { throw 'Invalid offer'; } return this;};mbox.prototype.getOffer = function() { return this.Pb;};mbox.prototype.show = function() { this.setEventTime('show.start'); var B = this.Pb.show(this); this.setEventTime(B == 1 ? "show.end.ok" : "show.end"); return B;};mbox.prototype.showContent = function(Yb) { if (Yb == null) { return 0; } if (this.Hb == null || !this.Hb.parentNode) { this.Hb = this.getDefaultDiv(); if (this.Hb == null) { return 0; } } if (this.Hb != Yb) { this.Zb(this.Hb); this.Hb.parentNode.replaceChild(Yb, this.Hb); this.Hb = Yb; } this._b(Yb); this.Ub(); return 1;};mbox.prototype.hide = function() { this.setEventTime('hide.start'); var B = this.showContent(this.getDefaultDiv()); this.setEventTime(B == 1 ? 'hide.end.ok' : 'hide.end.fail'); return B;};mbox.prototype.finalize = function() { this.setEventTime('finalize.start'); this.cancelTimeout(); if (this.getDefaultDiv() == null) { if (this.ob.force() != null) { this.setMessage('No default content, an empty one has been added'); } else { this.setMessage('Unable to locate mbox'); } } if (!this.activate()) { this.hide(); this.setEventTime('finalize.end.hide'); } this.setEventTime('finalize.end.ok');};mbox.prototype.cancelTimeout = function() { if (this.Xb) { clearTimeout(this.Xb); } if (this.Ob != null) { this.Ob.cancel(); }};mbox.prototype.getDiv = function() { return this.Hb;};mbox.prototype.getDefaultDiv = function() { if (this.Vb == null) { this.Vb = this.ob.locate(); } return this.Vb;};mbox.prototype.setEventTime = function(ac) { this.Qb[ac] = (new Date()).getTime();};mbox.prototype.getEventTimes = function() { return this.Qb;};mbox.prototype.getImportName = function() { return this.pb;};mbox.prototype.getURL = function() { return this.w.buildUrl();};mbox.prototype.getUrlBuilder = function() { return this.w;};mbox.prototype.bc = function(Hb) { return Hb.style.display != 'none';};mbox.prototype._b = function(Hb) { this.cc(Hb, true);};mbox.prototype.Zb = function(Hb) { this.cc(Hb, false);};mbox.prototype.cc = function(Hb, dc) { Hb.style.visibility = dc ? "visible" : "hidden"; Hb.style.display = dc ? "block" : "none";};mboxOfferContent = function() { this.Ub = function() {};};mboxOfferContent.prototype.show = function(Y) { var B = Y.showContent(document.getElementById(Y.getImportName())); if (B == 1) { this.Ub(); } return B;};mboxOfferContent.prototype.setOnLoad = function(Ub) { this.Ub = Ub;};mboxOfferAjax = function(Yb) { this.Yb = Yb; this.Ub = function() {};};mboxOfferAjax.prototype.setOnLoad = function(Ub) { this.Ub = Ub;};mboxOfferAjax.prototype.show = function(Y) { var ec = document.createElement('div'); ec.id = Y.getImportName(); ec.innerHTML = this.Yb; var B = Y.showContent(ec); if (B == 1) { this.Ub(); } return B;};mboxOfferDefault = function() { this.Ub = function() {};};mboxOfferDefault.prototype.setOnLoad = function(Ub) { this.Ub = Ub;};mboxOfferDefault.prototype.show = function(Y) { var B = Y.hide(); if (B == 1) { this.Ub(); } return B;};mboxCookieManager = function mboxCookieManager(g, fc) { this.g = g; this.fc = fc == '' || fc.indexOf('.') == -1 ? '' : '; domain=' + fc; this.gc = new mboxMap(); this.loadCookies();};mboxCookieManager.prototype.isEnabled = function() { this.setCookie('check', 'true', 60); this.loadCookies(); return this.getCookie('check') == 'true';};mboxCookieManager.prototype.setCookie = function(g, h, cb) { if (typeof g != 'undefined' && typeof h != 'undefined' && typeof cb != 'undefined') { var hc = new Object(); hc.name = g; hc.value = escape(h); hc.expireOn = Math.ceil(cb + new Date().getTime() / 1000); this.gc.put(g, hc); this.saveCookies(); }};mboxCookieManager.prototype.getCookie = function(g) { var hc = this.gc.get(g); return hc ? unescape(hc.value) : null;};mboxCookieManager.prototype.deleteCookie = function(g) { this.gc.remove(g); this.saveCookies();};mboxCookieManager.prototype.getCookieNames = function(ic) { var jc = new Array(); this.gc.each(function(g, hc) { if (g.indexOf(ic) == 0) { jc[jc.length] = g; } }); return jc;};mboxCookieManager.prototype.saveCookies = function() { var kc = false; var lc = 'disable'; var mc = new Array(); var nc = 0; this.gc.each(function(g, hc) { if(!kc || g === lc) { mc[mc.length] = g + '#' + hc.value + '#' + hc.expireOn; if (nc < hc.expireOn) { nc = hc.expireOn; } } }); var oc = new Date(nc * 1000); document.cookie = this.g + '=' + mc.join('|') + '; expires=' + oc.toGMTString() + '; path=/' + this.fc;};mboxCookieManager.prototype.loadCookies = function() { this.gc = new mboxMap(); var pc = document.cookie.indexOf(this.g + '='); if (pc != -1) { var qc = document.cookie.indexOf(';', pc); if (qc == -1) { qc = document.cookie.indexOf(',', pc); if (qc == -1) { qc = document.cookie.length; } } var rc = document.cookie.substring( pc + this.g.length + 1, qc).split('|'); var sc = Math.ceil(new Date().getTime() / 1000); for (var j = 0; j < rc.length; j++) { var hc = rc[j].split('#'); if (sc <= hc[2]) { var tc = new Object(); tc.name = hc[0]; tc.value = hc[1]; tc.expireOn = hc[2]; this.gc.put(tc.name, tc); } } }};mboxSession = function(uc, vc, Cb, wc, J) { this.vc = vc; this.Cb = Cb; this.wc = wc; this.J = J; this.xc = false; this.Kb = typeof mboxForceSessionId != 'undefined' ? mboxForceSessionId : mboxGetPageParameter(this.vc); if (this.Kb == null || this.Kb.length == 0) { this.Kb = J.getCookie(Cb); if (this.Kb == null || this.Kb.length == 0) { this.Kb = uc; this.xc = true; } } J.setCookie(Cb, this.Kb, wc);};mboxSession.prototype.getId = function() { return this.Kb;};mboxSession.prototype.forceId = function(bb) { this.Kb = bb; this.J.setCookie(this.Cb, this.Kb, this.wc);};mboxPC = function(Cb, wc, J) { this.Cb = Cb; this.wc = wc; this.J = J; this.Kb = typeof mboxForcePCId != 'undefined' ? mboxForcePCId : J.getCookie(Cb); if (this.Kb != null) { J.setCookie(Cb, this.Kb, wc); }};mboxPC.prototype.getId = function() { return this.Kb;};mboxPC.prototype.forceId = function(bb) { if (this.Kb != bb) { this.Kb = bb; this.J.setCookie(this.Cb, this.Kb, this.wc); return true; } return false;};mboxGetPageParameter = function(g) { var B = null; var yc = new RegExp(g + "=([^\&]*)"); var zc = yc.exec(document.location); if (zc != null && zc.length >= 2) { B = zc[1]; } return B;};mboxSetCookie = function(g, h, cb) { return mboxFactoryDefault.getCookieManager().setCookie(g, h, cb);};mboxGetCookie = function(g) { return mboxFactoryDefault.getCookieManager().getCookie(g);};mboxCookiePageDomain = function() { var fc = (/([^:]*)(:[0-9]{0,5})?/).exec(document.location.host)[1]; var Ac = /[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/; if (!Ac.exec(fc)) { var Bc = (/([^\.]+\.[^\.]{3}|[^\.]+\.[^\.]+\.[^\.]{2})$/).exec(fc); if (Bc) { fc = Bc[0]; } } return fc ? fc: "";};mboxShiftArray = function(Cc) { var B = new Array(); for (var j = 1; j < Cc.length; j++) { B[B.length] = Cc[j]; } return B;};mboxGenerateId = function() { return (new Date()).getTime() + "-" + Math.floor(Math.random() * 999999);};mboxScreenHeight = function() { return screen.height;};mboxScreenWidth = function() { return screen.width;};mboxBrowserWidth = function() { return (window.innerWidth) ? window.innerWidth : document.documentElement ? document.documentElement.clientWidth : document.body.clientWidth;};mboxBrowserHeight = function() { return (window.innerHeight) ? window.innerHeight : document.documentElement ? document.documentElement.clientHeight : document.body.clientHeight;};mboxBrowserTimeOffset = function() { return -new Date().getTimezoneOffset();};mboxScreenColorDepth = function() { return screen.pixelDepth;};if (typeof mboxVersion == 'undefined') { var mboxVersion = 41; var mboxFactories = new mboxMap(); var mboxFactoryDefault = new mboxFactory('espndotcom.tt.omtrdc.net', 'espndotcom', 'default');};if (mboxGetPageParameter("mboxDebug") != null || mboxFactoryDefault.getCookieManager() .getCookie("debug") != null) { setTimeout(function() { if (typeof mboxDebugLoaded == 'undefined') { alert('Could not load the remote debug.\nPlease check your connection' + ' to Test&amp;Target servers'); } }, 60*60); document.write('<' + 'scr' + 'ipt language="Javascript1.2" src=' + '"http://admin16.testandtarget.omniture.com/admin/mbox/mbox_debug.jsp?mboxServerHost=espndotcom.tt.omtrdc.net' + '&clientCode=espndotcom"><' + '\/scr' + 'ipt>');};mboxScPluginFetcher = function(b, Dc) { this.b = b; this.Dc = Dc;};mboxScPluginFetcher.prototype.Ec = function(w) { w.setBasePath('/m2/' + this.b + '/sc/standard'); this.Fc(w); var e = w.buildUrl(); e += '&scPluginVersion=1'; return e;};mboxScPluginFetcher.prototype.Fc = function(w) { var Gc = [ "dynamicVariablePrefix","visitorID","vmk","ppu","charSet", "visitorNamespace","cookieDomainPeriods","cookieLifetime","pageName", "currencyCode","variableProvider","channel","server", "pageType","transactionID","purchaseID","campaign","state","zip","events", "products","linkName","linkType","resolution","colorDepth", "javascriptVersion","javaEnabled","cookiesEnabled","browserWidth", "browserHeight","connectionType","homepage","pe","pev1","pev2","pev3", "visitorSampling","visitorSamplingGroup","dynamicAccountSelection", "dynamicAccountList","dynamicAccountMatch","trackDownloadLinks", "trackExternalLinks","trackInlineStats","linkLeaveQueryString", "linkDownloadFileTypes","linkExternalFilters","linkInternalFilters", "linkTrackVars","linkTrackEvents","linkNames","lnk","eo" ]; for (var j = 0; j < Gc.length; j++) { this.Hc(Gc[j], w); } for (var j = 1; j <= 75; j++) { this.Hc('prop' + j, w); this.Hc('eVar' + j, w); this.Hc('hier' + j, w); }};mboxScPluginFetcher.prototype.Hc = function(g, w) { var h = this.Dc[g]; if (typeof(h) === 'undefined' || h === null || h === '') { return; } w.addParameter(g, h);};mboxScPluginFetcher.prototype.cancel = function() { };mboxScPluginFetcher.prototype.fetch = function(w) { w.setServerType(this.getType()); var e = this.Ec(w); this.x = document.createElement('script'); this.x.src = e; document.body.appendChild(this.x);};mboxScPluginFetcher.prototype.getType = function() { return 'ajax';};function mboxLoadSCPlugin(Dc) { if (!Dc) { return null; } Dc.m_tt = function(Dc) { var Ic = Dc.m_i('tt'); Ic.H = true; Ic.b = 'espndotcom'; Ic['_t'] = function() { if (!this.isEnabled()) { return; } var Y = this.Kc(); if (Y) { var Wb = new mboxScPluginFetcher(this.b, this.s); Y.setFetcher(Wb); Y.load(); } }; Ic.isEnabled = function() { return this.H && mboxFactoryDefault.isEnabled(); }; Ic.Kc = function() { var ab = this.Lc(); var Hb = document.createElement('DIV'); return mboxFactoryDefault.create(ab, new Array(), Hb); }; Ic.Lc = function() { var Mc = this.s.events && this.s.events.indexOf('purchase') != -1; return 'SiteCatalyst: ' + (Mc ? 'purchase' : 'event'); }; }; return Dc.loadModule('tt');};var mboxTrack=function(mbox,params){var m,u,i,f=mboxFactoryDefault;if(f.isEnabled()){if(f.getMboxes().length()>0){m=f.getMboxes().getById(0);u=m.getURL().replace("mbox="+escape(m.getName()),"mbox="+mbox).replace("/undefined","/ajax").replace("mboxPage="+f.getPageId(),"mboxPage="+mboxGenerateId())+'&'+params,i=new Image();i.style.display='none';i.src=u;document.body.appendChild(i)}else{mboxTrackDefer(mbox,params)}}},mboxTrackDefer=function(mbox,params){var f=mboxFactoryDefault;if(f.isEnabled()){mboxFactoryDefault.getSignaler().signal(mbox,mbox+'&'+params)}},mboxTrackLink=function(mbox,params,url){mboxTrack(mbox,params);setTimeout("location='"+url+"'",300)};
